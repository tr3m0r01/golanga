การตรวจจับคำขอ HTTP ที่มี HTTP headers หรือ URI path ผิดปกติ (Signature #37)

Cloudflare ใช้ กฎจัดการ DDoS ที่ระบุลักษณะการโจมตีบน Layer 7 โดยมีชื่อกฎว่า “HTTP requests with unusual HTTP headers or URI path” (ในเอกสาร Cloudflare มักปรากฏใน signature ต่างๆ เช่น signature #1, #56, #57 等)
developers.cloudflare.com
 ซึ่งครอบคลุมคำขอ HTTP ที่มีเฮดเดอร์หรือรูปแบบ URI path ผิดปกติ โดย Cloudflare จะวิเคราะห์แพ็กเก็ตและหัวข้อ HTTP เพื่อหาความผิดปกติตามลักษณะต่อไปนี้:

ลักษณะของ HTTP Headers ผิดปกติ

เฮดเดอร์ที่เบราว์เซอร์ทั่วไปไม่ใช้ – คำขอ HTTP จากเบราว์เซอร์มาตรฐานมักมีเฮดเดอร์ชุดหนึ่งเป็นประจำ เช่น Host, User-Agent, Accept-Language, Accept-Encoding, Connection, Upgrade-Insecure-Requests เป็นต้น หากคำขอใดขาดเฮดเดอร์ที่จำเป็นเหล่านี้ หรือมีเฮดเดอร์แปลกใหม่ (เช่น “X-” header ที่ไม่คุ้นเคย) จำนวนมาก อาจถูกพิจารณาว่า ผิดปกติ

ค่าของเฮดเดอร์ที่ผิดปกติ – หากค่าของเฮดเดอร์มีลักษณะไม่น่าเกิดจากผู้ใช้งานปกติ เช่น มีตัวอักษรหรือตัวอักขระแปลก ๆ (ตัวอย่างเช่นโค้ด < หรือ > ใน header) Cloudflare จะถือว่าอาจมี malicious content และบล็อกคำขอนั้นโดยอัตโนมัติ
blog.cloudflare.com
 ตัวอย่างเช่น คำขอ HTTP ที่มี header แบบนี้จะถูกถือว่าผิดปกติ:

GET / HTTP/1.1
Host: example.com
User-Agent: <script>alert(1)</script>
Accept: /dev/null


Header ที่ตำแหน่งไม่ปกติหรือไม่มีการเข้ารหัสตามมาตรฐาน – คำขอบางชุดจากบ็อตหรือเครื่องมือโจมตีมักจัดเรียงเฮดเดอร์แตกต่างจากเบราว์เซอร์ (เช่น ใส่ Host: ในท้ายคำขอ) หรือมีเฮดเดอร์ลับๆ อย่าง Range: bytes=0-100,0-100,0-100,... สร้างความซ้ำซ้อนผิดปกติ ซึ่งเป็นสัญญาณบ่งชี้ว่าคำขออาจมาจากโปรแกรมโจมตี

User-Agent และค่าสัมพัทธ์อื่นๆ ที่แปลกออกไป – บ็อตมักใช้ User-Agent ที่ไม่ใช่ของเบราว์เซอร์ปัจจุบัน หรือบางครั้งไม่ส่งค่าดังกล่าวเลย (เช่น User-Agent: ว่างเปล่า) และมักไม่แนบคุกกี้ตามปกติ การมีหรือไม่มีเฮดเดอร์เหล่านี้ผิดวิธีเตือนว่าคำขออาจไม่มาจากผู้ใช้จริง (ตัวอย่างเช่น บ็อตจำนวนมากมักไม่ส่ง header ชุด If-None-Match หรือ If-Modified-Since ที่เบราว์เซอร์ใช้ลดโหลดได้)

ลักษณะของ URI Path ผิดปกติ

การใช้ตัวอักษร escape หรือ encoding ผิดปกติ – Path ที่มีการใช้ percent-encoding ซ้ำซ้อน หรือใช้หนี (escape) ตัวอักษรที่ไม่ควรมี เช่น การใส่ .. ซ้อนกันหลายชั้น (../ หรือ ..%2F) เพื่อพยายามเข้าถึงไฟล์ระบบ หรือมีตัวอักษรผิดรูปผิดทาง เช่น %00 (null byte) จะถูกมองว่าเป็นพฤติกรรมโจมตี เช่น:

GET /.../.../../../etc/passwd HTTP/1.1


โครงสร้าง path ซ้ำซ้อนหรือไร้รูปแบบ – เช่น path ที่มี slash ซ้อนกันมากเกินไป (/// หลายๆ ชั้น) หรือมี segment เดียวกันซ้ำซ้อน (/admin/admin/admin) ซึ่งมักเกิดจากการสุ่มทำ fuzzing เพื่อค้นหา endpoint ที่ไม่ได้เปิดเผย

Path ยาวหรือสุ่ม – การร้องขอแบบ DDoS บางชนิดจะสุ่ม path ที่ยาวหรือไม่มีความหมาย (เช่น /a8f3b9c2d1.php) เพื่อลองเข้าถึงไฟล์ชนิดต่างๆ จัดเรียงไม่เป็นรูปแบบ หากพบความยาว path ผิดปกติหรือ pattern ลักษณะ “bruteforce” จะถูก flag

พยายามเจาะเข้าถึงไฟล์หรือไดเรกทอรีลับ – เช่น paths ที่มีชื่อเป็นที่รู้จักว่าจะไม่มีในเว็บปกติ (/wp-login.php, /.env, /.git/config, /admin, /login?, ฯลฯ) ลักษณะเช่นนี้ถือว่าไม่ปกติและมักถูกจับตามองเป็นสแกนแสกนหาช่องโหว่

อักขระพิเศษ – การใช้อักขระที่ไม่ควรอยู่ใน path (เช่น เว้นวรรค, เครื่องหมาย *, ;, <, > ฯลฯ) โดยส่วนใหญ่ตัวแปรเหล่านี้ทำให้คำขอดูประหลาดและมักไม่ถูกต้องตามมาตรฐาน ทำให้ Cloudflare ตีเป็นคำขอผิดปกติ

ตัวอย่าง path ที่ผิดปกติ เช่น:

GET /../../admin////config HTTP/1.1
GET /%2e%2e/%2e%2e/%2e%2e/%2e%2e/bin/sh HTTP/1.1

วิธีการตรวจจับของ Cloudflare

Cloudflare ใช้ระบบ dosd (denial-of-service daemon) ทำงานร่วมกับ eBPF บน edge network เพื่อวิเคราะห์ตัวอย่างแพ็กเก็ตและตรวจจับรูปแบบที่ผิดปกติในระดับเครือข่ายและแอปพลิเคชัน
blog.cloudflare.com
 โดยระบบจะสร้าง “fingerprint” ของการจราจรที่สงสัย และพยายามหาความเหมือนหรือความผิดปกติใน fields ของ HTTP packets หากพบเจอพฤติกรรมที่มี pattern เดียวกันซ้ำๆ เช่น คำขอที่มีเฮดเดอร์ผิดปกติหรือ path ผิดรูปแบบตามที่กล่าวมา Cloudflare จะยกระดับเป็นกฎ DDoS เพื่อบล็อกหรือบังคับท้าทาย (challenge) คำขอนั้น ตัวอย่างของเงื่อนไขเชิงตรรกะ (pseudo-code) ที่ระบบอาจใช้ตรวจจับ เช่น:

# ตัวอย่าง pseudo-code การตรวจจับ request ผิดปกติ
if not headers.contains("Host") or headers["User-Agent"] is empty or headers contain malicious chars:
    flag_request()
if request.path.contains("../") or request.path.contains("//") or unusual_encoding(request.path):
    flag_request()


นอกจากนี้ Cloudflare ยังอาจติดตาม อัตราการเกิดคำขอ เช่น หากพบ IP เดียวทำคำขอเหล่านี้ผิดปกติซ้ำๆ ในอัตราสูง ก็จะยิ่งกระตุ้นกฎ DDoS ให้ทำงานเร็วขึ้น

การใช้งานจริง Cloudflare จะจัดการโดยกฎ Managed Rules ในชุด HTTP DDoS Attack Protection ซึ่งมีชื่อกฎเป็น Signature ID ต่างๆ (Signature #1, #56, #57 เป็นต้น) ที่จับรูปแบบดังกล่าว
developers.cloudflare.com
 การแม็ชชิ่งนี้ทำให้ Cloudflare สามารถสกัดกั้นการโจมตี HTTP DDoS ได้อย่างอัตโนมัติโดยไม่กระทบกับทราฟฟิคปกติมากนัก

แหล่งที่มา: ข้อมูลจากเอกสาร Cloudflare DDoS Protection (Managed Rulesets) และบทความ Cloudflare ยืนยันว่าระบบจะตรวจจับ pattern ความผิดปกติใน header และ path
blog.cloudflare.com
, รวมถึงการบล็อกคำขอที่มีเฮดเดอร์มีอักขระอันตรายเช่น < หรือ >
blog.cloudflare.com
. The rules are documented in Cloudflare’s best practices